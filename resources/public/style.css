/* The general principle for borders is that the container sets a class
   on a contained div saying what kind of borders it needs. */

* {
    border-style: solid;
    border-width: 0px;
    border-color: hsl(0, 0%, 80%);
    box-sizing: border-box;
    background-color: transparent;
}

.item { 
    padding: 3px;
}

.stack > .item {
    margin: 0px 3px 0px 3px;
    padding: 3px 0px 3px 0px;
}

.stack > .item + .item {
    border-width: 2px 0px 0px 0px;
}

.item.with-elements {
    background-color: white;
}

.vertical-center-wrapper {
    display: flex;
    align-items: center;
}

.vertical-center-wrapper > * {
    flex-grow: 1;
}

.indent-wrapper {
    display: flex;
    flex-direction:column;
}

.indent-wrapper > * {
    flex-grow: 1;
}

.indent-wrapper > .depth-1 {
    margin-left: 8px;
}

.indent-wrapper > .depth-2 {
    margin-left: 16px;
}

.indent-wrapper > .depth-3 {
    margin-left: 24px;
}

/* Repeat selector to give this rule highest specificity */
.selected.selected.selected.selected.selected.selected {
    background-image:
    linear-gradient(to right,
                    hsla(220, 100%, 55%, 1),
                    hsla(0, 0%, 100%, 0) 5px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to left,
                    hsla(220, 100%, 55%, 1),
                    hsla(0, 0%, 100%, 0) 5px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to bottom,
                    hsla(220, 100%, 55%, 1),
                    hsla(0, 0%, 100%, 0) 5px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to top,
                    hsla(220, 100%, 55%, 1),
                    hsla(0, 0%, 100%, 0) 5px,
                    hsla(0, 0%, 100%, 0));
}

.element-row {
    display: flex;
    width:100%;
    align-items: stretch;
}

.element-table {
    display: flex;
    flex-direction: column;
    margin-left: 3px;
    width: 100%;
}

.row-header.tags.selected {
    background-color: hsl(194, 100%, 88%);
}

.with-elements > :last-child {
    margin-top: 2px;
    margin-left: 3px;
}

.top-border {
    border-top-width: 2px;
}

.bottom-border {
    border-bottom-width: 2px;
}

.ll-corner {
    border-bottom-left-radius: 7px;
}

.full-row {
    text-align: right;
}

/* Illumination of borders for top level tags */
.row-header.tags {
    vertical-align: top;
    background-image:
    linear-gradient(to right,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
    background-color: hsl(194, 100%, 88%);
    border-left-width: 2px;
    width: 30%;
}

.row-header.tags.top-border {
    background-image:
    linear-gradient(to right,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to bottom,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
    border-top-left-radius: 7px;
}

.row-header.tags.bottom-border, .row-header.tags.ll-corner {
    background-image:
    linear-gradient(to right,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to top,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
    border-bottom-left-radius: 7px;
}

.row-header.tags.top-border.bottom-border, .row-header.tags.top-border.ll-corner {
    background-image:
    linear-gradient(to right,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to bottom,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to top,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
    border-top-left-radius: 7px;
    border-bottom-left-radius: 7px;
}

.wrapped-element.tags {
    background-image:
    linear-gradient(to left,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to right,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to bottom,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to top,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
    border-top-left-radius: 7px;
    border-top-right-radius: 7px;
    border-bottom-left-radius: 7px;
}

.editable.wrapped-element.tags {
    border-top-right-radius: 0px;
}

/* Illumination of borders for indented tags */
.row-header.tags > .full-row {
    background-image:
    linear-gradient(to bottom,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to top,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
}

.row-header.tags > .full-row.with-children,
.row-header.tags.bottom-row > .full-row,
.row-header.tags.ll-corner > .full-row {
    background-image:
    linear-gradient(to bottom,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
}

.for-multiple, .row-header.tags.for-multiple, .for-multiple > .stack {
    vertical-align: middle;
}

.stack {
    vertical-align: top;
}

.with-children, .full-row.with-children,
.with-elements, .full-row.with-elements {
    text-align: left;
}

.no-tags > .row-header.tags {
    width: 10px;
}

.row-header.tags {
    min-height: 15px; /* Make no-content cells have minimum height */
}

.elements-column {
    min-height: 15px; /* Make no-content cells have minimum height */
    border-width: 2px 2px 0px 2px;
    width: 0px;
    flex-grow: 1;
    background-color: white;
}

.last-row > .elements-column {
    border-bottom-width: 2px;
}

.table {
    width: fit-content;
}

.column-header-container {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    justify-content: flex-end;
    border-width: 0px 0px 2px 2px;
}

.column-header-container.tags {
    background-image:
    linear-gradient(to right,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to left,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to bottom,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
}

.column-header-container.tags.empty {
    background-image: none;
}

.column-header-container.tags.empty:last-child {
    background-image:
    linear-gradient(to left,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
}

.column-header-container.tags.empty:first-child {
    background-image:
    linear-gradient(to right,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
}

.column-header-container.with-children {
     border-bottom-width: 0px;
}

.column-header-container.rightmost {
     border-right-width: 2px;
}

.column-header-container:not(.empty) {
    border-top-width: 2px;
    border-top-left-radius: 7px;
    border-top-right-radius: 7px;
}

.column-header-stack.top-level:last-child {
    border-right-width: 2px;
}

.tags.column-header-container, .tags.column-header-stack,
.tags.wrapped-element {
    background-color: hsl(194, 100%, 88%);
}

/* Keep the label color from bleeding outside the top radiused corners */
.tags.column-header-stack.top-level {
    background-image:
    linear-gradient(to bottom,
                    hsla(0, 0%, 100%, 1),
                    hsla(0, 0%, 100%, 1) 7px,
                    hsla(0, 0%, 100%, 0) 0px,
                    hsla(0, 0%, 100%, 0));
}

.column-header-stack {
    display: flex;
    flex-direction: column;
}

.column-header {
    align-items: flex-stretch;
    text-align: center;
    padding: 3px;
}

.column-header.editable {
    min-height: 20px;
}

.column-header-sequence {
    display: flex;
    align-items: stretch;
}

.wrapped-element {
    border-width: 2px;
}

.has-border > .wrapped-element {
    margin-left: -2px;
    margin-right: -2px;
}

.stack > .wrapped-element + .wrapped-element,
.has-border > .wrapped-element:first-child {
    margin-top: -2px;
}

.has-border > .wrapped-element:last-child {
    margin-bottom: -2px;
}

.wrapped-element > .indent-wrapper > * {
    border-top-width: 2px;
    border-left-width: 2px;
    background-color: white;
}

.table-cell {
    width: 150px;
    min-height: 20px;
    border-width: 0px 0px 2px 2px;
}

.table-cell:last-child {
    border-right-width: 2px;
}

.table-row {
    display: flex;
    align-items: stretch;
}

/* grayish indicators of places where there is no current content */
.editable:not(.content-text):not(.column-header) {
    background-color: hsl(0, 0%, 95%);
}

.editable.row-header.tags:not(.content-text),
.row-header.tags > .editable:not(.content-text),
.editable.tags.indent-wrapper {
    background-color: hsl(194, 50%, 88%);
}

.editable.tags.indent-wrapper > * {
    background-color: white;
    border-left-width: 2px;
    padding: 3px;
}

.content-text {
    min-height: 20px;
    overflow-wrap: break-word;
}

.placeholder {
    font-size: smaller;
    font-style: oblique;
    color: rgba(0, 0, 0, 0.4);
}

.editable {
    position: relative; /* To make edit_holder position relative to it */
}

#edit_holder {
    width: 100%;
    height: 100%;
    display: none;
    position: absolute;
    left: 0;
    top: 0;
    z-index: 1;
}

.editable > #edit_holder {
    display: block;
}

#edit_input {
    min-height: 100%;
    font-size: 100%;
    min-width: 200px;
    height: auto;
    background-color: cornsilk;
    box-shadow: 5px 5px 3px grey;
    resize: none;
    overflow: visible;
    left: 0;
    right: 0;
    position: absolute;
    z-index: 1;
}