/* The general principle for borders is that the container sets a class
   on a contained div saying what kind of borders it needs. */

* {
    border-style: solid;
    border-width: 0px;
    border-color: hsl(0, 0%, 80%);
    box-sizing: border-box;
    background-color: transparent;
}

body { /* override the default of 8px */
    margin-top: 0px;
}
/* Repeat selector to give this rule highest specificity */
.selected.selected.selected.selected.selected.selected {
    background-image:
    linear-gradient(to right,
                    hsla(220, 100%, 55%, 1),
                    hsla(0, 0%, 100%, 0) 5px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to left,
                    hsla(220, 100%, 55%, 1),
                    hsla(0, 0%, 100%, 0) 5px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to bottom,
                    hsla(220, 100%, 55%, 1),
                    hsla(0, 0%, 100%, 0) 5px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to top,
                    hsla(220, 100%, 55%, 1),
                    hsla(0, 0%, 100%, 0) 5px,
                    hsla(0, 0%, 100%, 0));
}

.tags.column-header-container, .tags.column-header-stack,
.tags.wrapped-element {
    background-color: hsl(194, 100%, 88%);
}

.bordered, .horizontal-tags-element > * {
    border-width: 2px;
    margin: 0px -2px -2px 0px;
}

.item { 
    padding: 3px;
}

.stack > .item {
    margin: 0px 3px 0px 3px;
    padding: 3px 0px 3px 0px;
}

.stack > .item + .item {
    border-width: 2px 0px 0px 0px;
}

.indent-wrapper {
    display: flex;
    flex-direction :column;
}

.indent-wrapper > * {
    flex-grow: 1;
    margin-left: 8px;
}

.horizontal-tags-element {
    display: flex;
    flex-direction: row;
}

.horizontal-tags-element > :first-child {
    border-width: 2px;
    border-bottom-left-radius: 7px;
    border-top-left-radius: 7px;
    margin: 0px -2px -2px 0px;
}

.horizontal-tags-element > :last-child {
    flex: 1;
}

.indent-width {
    width: 12px;
}

.with-elements > :last-child {
    margin-top: 2px;
    margin-left: 3px;
}

.wrapped-element.tags {
    background-image:
    linear-gradient(to left,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to right,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to bottom,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0)),
    linear-gradient(to top,
                    hsla(0, 0%, 100%, .7),
                    hsla(0, 0%, 100%, 0) 7px,
                    hsla(0, 0%, 100%, 0));
    border-top-left-radius: 7px;
    border-top-right-radius: 7px;
    border-bottom-left-radius: 7px;
}

.for-multiple, .for-multiple > .stack {
    vertical-align: middle;
}

.stack {
    vertical-align: top;
}

.with-children, .with-elements {
    text-align: left;
}

.editable {
    min-height: 15px; /* Make no-content cells have minimum height */
}

/* grayish indicators of places where there is no current content */
.editable:not(.content-text):not(.column-header) {
    background-color: hsl(0, 0%, 95%);
}

.editable.tags:not(.content-text),
.tags > .editable:not(.content-text) {
    background-color: hsl(194, 50%, 88%);
}

.stack > .wrapped-element:last-child, .table-cell.wrapped-element {
    display: flex;
    flex-direction: column;
}

.wrapped-element > .indent-wrapper {
    flex: 1;
}

.tags.indent-wrapper > *, .tags > .indent-wrapper > * {
    background-color: white;
}

.content-text {
    min-height: 20px;
    overflow-wrap: break-word;
}

/* For edit holder */

.editable {
    position: relative; /* To make edit_holder position relative to it */
}

#edit_holder {
    width: 100%;
    height: 100%;
    display: none;
    position: absolute;
    left: 0;
    top: 0;
    z-index: 1;
}

.editable > #edit_holder {
    display: block;
}

#edit_input {
    min-height: 100%;
    font-size: 100%;
    min-width: 200px;
    height: auto;
    background-color: cornsilk;
    box-shadow: 5px 5px 3px grey;
    resize: none;
    overflow: visible;
    left: 0;
    right: 0;
    position: absolute;
    z-index: 1;
}

/* For toolbar */

.toolbar {
    background-color: white;
    width: 100%;
    padding-top: 4px;
    padding-bottom: 4px;
    padding-left: 10px;
    margin-bottom: 5px;
    border-color: hsl(0, 0%, 75%);
    border-width: 0px 0px 1px 0px;
}

.tool {
    position: relative;
    height: 30px;
    width: 60px;
    font-size: 20px;
    text-align: center;
    vertical-align: top;
    background-color: hsl(0, 0%, 95%);
    border-width: 1px;
    border-radius: 2px;
    border-color: hsl(0, 0%, 75%);
    margin: 0px 10px 0px 10px;
    display: inline-block;
}

.tooltip {
    visibility: hidden;
    background-color: hsl(0, 0%, 40%);
    font-size: 100%;
    box-sizing: content-box;
    width: max-content;
    max-width: 120px;
    color: #fff;
    text-align: center;
    padding: 2px 4px;
    border-radius: 6px;
 
    /* Position the tooltip text */
    position: absolute;
    top: 100%;
    left: 50%; /* 50% here is the container's width */
    transform: translate(-50%, 5px); /* 50% here is the tip's width */
    z-index: 1;
}

/* Make a triangle for the tooltip by adding one more thing after the text,
   which will consist of only border with only one side non-transparent. */
.tool .tooltip::after {
    content: " ";
    border-width: 5px;
    border-style: solid;
    border-color: transparent transparent hsl(0, 0%, 40%) transparent;
    position: absolute;
    top: -10px; /* Above the top of the tooltip */
    left: 50%;
    margin-left: -5px;
}

.tool:hover {
    background-color: hsl(0, 0%, 97%);
    border-color: hsl(0, 0%, 60%);
}

/* Show the tooltip text when you mouse over the tool */
.tool:hover .tooltip {
    visibility: visible;
    transition-delay: 1s;
}